AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Whatsapp webhook to persiste received messages

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  AppName:
    Description: The name of the application
    Type: String
  AdminEmail:
    Description: The email used to set default admin user
    Type: String
  AdminName:
    Description: The name used to set default admin user
    Type: String
  AdminPhoneNumber:
    Description: The phone number used to set default admin user
    Type: String
  StorageBucket:
    Description: Bucket for storage
    Type: String

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AppName} - UserPool
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: true
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireUppercase: false
          RequireNumbers: true
          RequireSymbols: false
          TemporaryPasswordValidityDays: 4
      MfaConfiguration: "OFF"
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      Schema:
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: email
          AttributeDataType: String
          Mutable: false
          Required: true
        - Name: phone_number
          AttributeDataType: String
          Mutable: true
          Required: true

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub ${AppName} - UserPoolClient
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      RefreshTokenValidity: 30
      SupportedIdentityProviders:
        - COGNITO
      TokenValidityUnits:
        RefreshToken: days
      PreventUserExistenceErrors: ENABLED
      ExplicitAuthFlows:
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH

  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    Properties:
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId: !Ref UserPoolClient
          ProviderName: !GetAtt UserPool.ProviderName

  StorageAuthorizedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                - cognito-identity.amazonaws.com
            Action:
              - sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref IdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
      Policies:
        - PolicyName: interpret-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - comprehend:*
                Resource:
                  - "*"
        - PolicyName: storage-policy-list
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${StorageBucket}
                Condition:
                  StringLike:
                    s3:prefix:
                      - public/
                      - public/*
                      - protected/
                      - protected/*
                      - private/${cognito-identity.amazonaws.com:sub}/
                      - private/${cognito-identity.amazonaws.com:sub}/*
        - PolicyName: storage-policy-manager
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${StorageBucket}/public/*
                  - !Sub arn:aws:s3:::${StorageBucket}/protected/${!cognito-identity.amazonaws.com:sub}/*
                  - !Sub arn:aws:s3:::${StorageBucket}/private/${!cognito-identity.amazonaws.com:sub}/*
        - PolicyName: storage-policy-uploads
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${StorageBucket}/uploads/*
        - PolicyName: storage-policy-protected
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${StorageBucket}/protected/*

  StorageUnAuthorizedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Federated:
                - cognito-identity.amazonaws.com
            Action:
              - sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                cognito-identity.amazonaws.com:aud: !Ref IdentityPool
              ForAnyValue:StringLike:
                cognito-identity.amazonaws.com:amr: authenticated
      Policies:
        - PolicyName: storage-policy-aunauthorized-list
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${StorageBucket}
                Condition:
                  StringLike:
                    s3:prefix:
                      - public/
                      - public/*
                      # - protected/
                      # - protected/*
        - PolicyName: storage-policy-aunauthorized-manager
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource:
                  - !Sub arn:aws:s3:::${StorageBucket}/public/*
        # - PolicyName: storage-policy-aunauthorized-uploads
        #   PolicyDocument:
        #     Version: 2012-10-17
        #     Statement:
        #       - Effect: Allow
        #         Action:
        #           - s3:PutObject
        #         Resource:
        #           - !Sub arn:aws:s3:::${StorageBucket}/uploads/*
        # - PolicyName: storage-policy-aunauthorized-protected
        #   PolicyDocument:
        #     Version: 2012-10-17
        #     Statement:
        #       - Effect: Allow
        #         Action:
        #           - s3:GetObject
        #         Resource:
        #           - !Sub arn:aws:s3:::${StorageBucket}/protected/*

  IdentityPoolRoleMapping:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    Properties:
      IdentityPoolId: !Ref IdentityPool
      Roles:
        authenticated: !GetAtt StorageAuthorizedRole.Arn
        unauthenticated: !GetAtt StorageUnAuthorizedRole.Arn

  AdminUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      UserPoolId: !Ref UserPool
      Username: !Ref AdminEmail
      DesiredDeliveryMediums:
        - EMAIL
      UserAttributes:
        - Name: email
          Value: !Ref AdminEmail
        - Name: phone_number
          Value: !Ref AdminPhoneNumber
        - Name: name
          Value: !Ref AdminName

Outputs:
  UserPoolRef:
    Description: User pool reference
    Value: !Ref UserPool
  UserPoolClientRef:
    Description: User pool client reference
    Value: !Ref UserPoolClient
  Issuer:
    Description: "Url used for issuer on HTTP API JWT tokens"
    Value: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPool}
