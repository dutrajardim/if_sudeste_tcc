AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Whatsapp webhook to persiste received messages

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  AppName:
    Description: The name of the application
    Type: String
  AdminEmail:
    Description: The email used to set default admin user
    Type: String
  AdminName:
    Description: The name used to set default admin user
    Type: String
  AdminPhoneNumber:
    Description: The phone number used to set default admin user
    Type: String

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AppName} - UserPool
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: true
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireUppercase: false
          RequireNumbers: true
          RequireSymbols: false
          TemporaryPasswordValidityDays: 4
      MfaConfiguration: "OFF"
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_CODE
      EmailConfiguration:
        EmailSendingAccount: COGNITO_DEFAULT
      Schema:
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: true
        - Name: email
          AttributeDataType: String
          Mutable: false
          Required: true
        - Name: phone_number
          AttributeDataType: String
          Mutable: true
          Required: true

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub ${AppName} - UserPoolClient
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      RefreshTokenValidity: 30
      SupportedIdentityProviders:
        - COGNITO
      TokenValidityUnits:
        RefreshToken: days
      PreventUserExistenceErrors: ENABLED
      ExplicitAuthFlows:
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_ADMIN_USER_PASSWORD_AUTH

  AttendantGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      Description: Exchange messages
      GroupName: attendant
      Precedence: 0
      UserPoolId: !Ref UserPool

  AdminUser:
    Type: AWS::Cognito::UserPoolUser
    Properties:
      UserPoolId: !Ref UserPool
      Username: !Ref AdminEmail
      DesiredDeliveryMediums:
        - EMAIL
      UserAttributes:
        - Name: email
          Value: !Ref AdminEmail
        - Name: phone_number
          Value: !Ref AdminPhoneNumber
        - Name: name
          Value: !Ref AdminName

  AttachAdminUserToAttendantGroup:
    Type: AWS::Cognito::UserPoolUserToGroupAttachment
    Properties:
      GroupName: !Ref AttendantGroup
      Username: !Ref AdminUser
      UserPoolId: !Ref UserPool

Outputs:
  UserPoolRef:
    Description: User pool reference
    Value: !Ref UserPool
  UserPoolClientRef:
    Description: User pool client reference
    Value: !Ref UserPoolClient
  Issuer:
    Description: "Url used for issuer on HTTP API JWT tokens"
    Value: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPool}
