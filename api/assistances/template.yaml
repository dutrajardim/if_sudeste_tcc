AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Whatsapp webhook to persiste received messages

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  AppName:
    Description: The name of the application
    Type: String
  AssistancesTableNameParam:
    Default: app_Assistances
    Description: The name of the table for store assistances notifications.
    Type: String
  NotificationsTableStreamArnParam:
    Description: Assistances table stream
    Type: String
  EmailsTableNameParam:
    Description: This table keeps emails headers.
    Type: String
  DynamoDBEndpointParam:
    Type: String
    Description: URL to access dynamodb.
  StageParam:
    Description: The name of the stage
    Type: String
    Default: beta
  IssuerParam:
    Description: The token issuer
    Type: String
  UserPoolClientRefParam:
    Description: The cognito user pool client
    Type: String

Globals:
  Function:
    Runtime: nodejs18.x
    Architectures:
      - x86_64
    MemorySize: 128
    Timeout: 100

Resources:
  # HTTP API REST
  AppApiGateway:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref StageParam
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: !Sub ${AppName} - Assistances
        paths: {}
      CorsConfiguration:
        AllowHeaders:
          - Content-Type
          - Authorization
        AllowMethods:
          - OPTIONS
          - GET
          - POST
          - DELETE
          - PUT
          - PATCH
        AllowOrigins:
          - "https://*"
          - "http://*"
        AllowCredentials: true
        MaxAge: 600
      Auth:
        Authorizers:
          OAuth2Authorizer:
            IdentitySource: $request.header.Authorization
            JwtConfiguration:
              issuer: !Ref IssuerParam
              audience:
                - !Ref UserPoolClientRefParam
        EnableIamAuthorizer: true
        DefaultAuthorizer: OAuth2Authorizer

  # Lambda functions API
  OpenAssistanceListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers
      Handler: handler_open_assistance_list.handler
      Description: Return a list of open assistances
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AssistancesTableNameParam
      Environment:
        Variables:
          ASSISTANCES_TABLE_NAME: !Ref AssistancesTableNameParam
          DYNAMODB_ENDPOINT: !Ref DynamoDBEndpointParam
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /assistances
            Method: GET
            ApiId: !Ref AppApiGateway
            Auth:
              Authorizer: OAuth2Authorizer

  AssistanceListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers
      Handler: handler_assistance_list.handler
      Description: Return a list of assistances
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AssistancesTableNameParam
      Environment:
        Variables:
          ASSISTANCES_TABLE_NAME: !Ref AssistancesTableNameParam
          DYNAMODB_ENDPOINT: !Ref DynamoDBEndpointParam
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /assistances/{partitionKey}
            Method: GET
            ApiId: !Ref AppApiGateway
            Auth:
              Authorizer: OAuth2Authorizer

  AssistanceCloseFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers
      Handler: handler_assistance_close.handler
      Description: Change assistance status from open to close
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AssistancesTableNameParam
      Environment:
        Variables:
          ASSISTANCES_TABLE_NAME: !Ref AssistancesTableNameParam
          DYNAMODB_ENDPOINT: !Ref DynamoDBEndpointParam
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /assistances/{partitionKey}/{sortKey}/close
            Method: PATCH
            ApiId: !Ref AppApiGateway
            Auth:
              Authorizer: OAuth2Authorizer

  AssistanceStartFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers
      Handler: handler_assistance_start.handler
      Description: Change assistance status from open to close
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AssistancesTableNameParam
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:ListUsers
                - cognito-idp:AdminGetUser
              Resource: "*"
      Environment:
        Variables:
          ASSISTANCES_TABLE_NAME: !Ref AssistancesTableNameParam
          DYNAMODB_ENDPOINT: !Ref DynamoDBEndpointParam
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /assistances/{partitionKey}/{sortKey}/start
            Method: PATCH
            ApiId: !Ref AppApiGateway
            Auth:
              Authorizer: OAuth2Authorizer

  TicketUpdateTriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: triggers
      Handler: handler_ticket_update.handler
      Description: Create or update a ticket when a new message is stored
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AssistancesTableNameParam
        # - DynamoDBCrudPolicy:
        #     TableName: !Ref PersonalDataTableNameParam
      Environment:
        Variables:
          ASSISTANCES_TABLE_NAME: !Ref AssistancesTableNameParam
          DYNAMODB_ENDPOINT: !Ref DynamoDBEndpointParam
          # PERSONAL_DATA_TABLE_NAME: !Ref PersonalDataTableNameParam
      Events:
        Trigger:
          Type: DynamoDB
          Properties:
            Stream: !Ref NotificationsTableStreamArnParam
            StartingPosition: TRIM_HORIZON
            BatchSize: 20
            MaximumRetryAttempts: 3

  EmailListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers
      Handler: email_list.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref EmailsTableNameParam
      Environment:
        Variables:
          EMAILS_TABLE_NAME: !Ref EmailsTableNameParam
          NODE_OPTIONS: "--enable-source-maps"
      Events:
        Api:
          Type: HttpApi
          Properties:
            Path: /emails
            Method: GET
            ApiId: !Ref AppApiGateway
            Auth:
              Authorizer: OAuth2Authorizer

    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - src/email_list.ts
