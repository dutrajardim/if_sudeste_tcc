AWSTemplateFormatVersion: 2010-09-09
Description: Whatsapp websocket

Transform:
- AWS::Serverless-2016-10-31

Parameters:
  ConnectionsTableNameParam:
    Default: wa_Connections
    Description: The name of the table for store whatsapp notifications.
    Type: String
  DynamoDBEndpointParam:
    Type: String
    Description: URL to access dynamodb.
  StageParam:
    Description: The name of the stage
    Type: String
    Default: beta

Globals:
  Function:
    Runtime: nodejs18.x
    Architectures:
      - x86_64
    MemorySize: 128
    Timeout: 100

Resources:
  WebsocketApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: Whatsapp WebSocket API
      Description: An Amazon API Gateway Websocket as an interface to whatsapp messages
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"
      Tags:
        App: wa_websocket

  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - OnConnectRoute
      - OnDisconnectRoute
    Properties:
      ApiId: !Ref WebsocketApiGateway

  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: !Ref StageParam
      Description: Development
      DeploymentId: !Ref Deployment
      ApiId: !Ref WebsocketApiGateway

  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers
      Handler: wss_on_connect.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTableNameParam
      Environment:
        Variables:
          CONNECTIONS_TABLE_NAME: !Ref ConnectionsTableNameParam
          DYNAMODB_ENDPOINT: !Ref DynamoDBEndpointParam
      Tags:
        App: wa_websocket

  OnConnectFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      FunctionName: !Ref OnConnectFunction
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketApiGateway}/*"

  OnConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebsocketApiGateway
      Description: Determine how the API endpoint will be integrated with the lambda function
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations"

  OnConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebsocketApiGateway
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: OnConnectRoute
      Target: !Sub "integrations/${OnConnectIntegration}"

  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handlers
      Handler: wss_on_disconnect.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTableNameParam
      Environment:
        Variables:
          CONNECTIONS_TABLE_NAME: !Ref ConnectionsTableNameParam
          DYNAMODB_ENDPOINT: !Ref DynamoDBEndpointParam
      Tags:
        App: wa_websocket

  OnDisconnectFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      FunctionName: !Ref OnDisconnectFunction
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Sub "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketApiGateway}/*"
  
  OnDisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WebsocketApiGateway
      Description: Determines how the API endpoint will be integrated with the lambda function
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations"
    
  OnDisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WebsocketApiGateway
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: OnDisconnectRoute
      Target: !Sub "integrations/${OnDisconnectIntegration}"


Outputs:
  WebsocketEndpoint:
    Description: "Websocket endpoint"
    Value: !Sub "${WebsocketApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"
  WebsocketArn:
    Description: "Websocket Arn"
    Value: !Sub "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketApiGateway}"